<?xml version="1.0"?>
<project name="AS3Mailer" basedir="." default="usage">
	<!-- set up a prefix for all environment variables -->
	<property environment="env." />
	<!-- load user properties to override defaults -->
	<property file="user.properties" />
	<!-- System environment must contain FLEX_HOME variable that points to Flex SDK -->
	<property name="FLEX_HOME" location="${env.FLEX_HOME}" />
	<!-- identify properties file -->
	<property file="build.properties" />

	<target name="usage">
		<echo message="" />
		<echo message="AS3Mailer Build Usage" />
		<echo message="-----------------------------------" />
		<echo message="" />
		<echo message="Available targets are:" />
		<echo message="" />
		<echo message="asdoc         --&gt; Build SWC, test, and generate asdocs" />
		<echo message="package       --&gt; Build SWC, test, and create release zip" />
		<echo message="compile       --&gt; Build SWC" />
		<echo message="clean         --&gt; Remove all folders created by build script" />
		<echo message="init          --&gt; Clean and create build folders" />
		<echo message="" />
	</target>
	
	<!-- Clean Build and Report files -->
	<target name="clean">
		<!-- Remove all directories created during the build process -->
		<echo>[clean] Removing Build and Report directories</echo>
		<delete includeemptydirs="true" failonerror="false">
			<fileset dir="${dist.loc}" defaultexcludes="false">
				<include name="**/*" />
			</fileset>
		</delete>
		<echo>[clean] Build and Report directories removed</echo>
	</target>
	
	<!-- Create directories needed for the build process -->
	<target name="init" depends="clean">
		<echo>[init] Creating Bin and Report directories</echo>
		<mkdir dir="${bin.loc}" />
		<echo>[init] Bin and Report directories created</echo>
	</target>
	
	<!-- Compile Release SWC -->
	<target name="compile" depends="init">
		<echo>[compile] Compiling release SWC</echo>
		<echo>[compile] Using Flex SDK at: ${FLEX_HOME}</echo>
		<java jar="${FLEX_HOME}/lib/compc.jar" dir="${FLEX_HOME}/frameworks" fork="true" failonerror="true">
			<!-- Build our SWC with a versioned name. -->
			<arg value="-output=${bin.loc}/${project.name.versioned}.swc" />
			<!-- We want all the org package classes in the SWC being built. -->
			<arg value="-include-sources=${main.src.loc}" />
			<!-- Include classes from SWCs in this folder, but only the ones we use. -->
			<arg value="-library-path+=${lib.loc}" />
			<!-- Boolean mosh pit! -->
			<arg value="-incremental=true" />
			<arg value="-static-link-runtime-shared-libraries=true" />
			<arg value="-verbose-stacktraces=true" />
			<arg value="-headless-server=true" />
		</java>
		<echo>[compile] Release SWC ${project.name.versioned}.swc created successfully</echo>
	</target>
	
	<!-- Build Documentation -->
	<target name="asdoc" depends="compile">
		<echo>[asdoc] Generating ASDOC documentation</echo>
		<tstamp>
			<format property="docgen.time" pattern="MM/dd/yyyy hh:mm aa" unit="hour" />
		</tstamp>
		<java jar="${FLEX_HOME}/lib/asdoc.jar" dir="${FLEX_HOME}/frameworks" fork="true" failonerror="true">
			<arg line="-external-library-path ${lib.loc}" />
			<arg line="-source-path ${main.src.loc}" />
			<arg line="-doc-sources ${main.src.loc}" />
			<arg line="-output ${doc.loc}" />
			<arg value="-keep-xml=true" />
			<arg value="-lenient=true" />
			<arg line="-window-title 'AS3Mailer ${project.ver.num}'" />
			<arg line="-main-title 'AS3Mailer ${project.ver.num}'" />
			<arg line="-footer 'AS3Mailer - https://github.com/Matan/AS3Mailer - Documentation generated at: ${docgen.time}'" />
		</java>
		<echo>[asdoc] ASDOC documentation generated successfully</echo>
	</target>
	
	<!-- Package the Build -->
	<target name="package" depends="asdoc">
		<tstamp>
			<format property="touch.time" pattern="MM/dd/yyyy hh:mm aa" unit="hour" />
		</tstamp>
		<!-- Assemble  -->
		<echo>[package] Packaging Release</echo>
		<mkdir dir="${dist.loc}" />
		<mkdir dir="${dist.loc}/bin" />
		<mkdir dir="${dist.loc}/libs" />
		<mkdir dir="${dist.loc}/src" />
		<mkdir dir="${dist.loc}/src_server" />
		<mkdir dir="${dist.loc}/src_example" />
		<copy file="${bin.loc}/${project.name.versioned}.swc" todir="${dist.loc}/bin" />
		<copy todir="${dist.loc}/src">
			<fileset dir="${main.src.loc}" />
		</copy>
		<copy todir="${dist.loc}/libs">
			<fileset dir="${lib.loc}" />
		</copy>
		<copy todir="${dist.loc}/src_server">
			<fileset dir="${server.src.loc}" />
		</copy>
		<copy todir="${dist.loc}/src_example">
			<fileset dir="${sample.src.loc}" />
		</copy>
		<copy file="${bin.loc}/AS3MailerExample.swf" tofile="${dist.loc}/bin/AS3MailerExample.swf" overwrite="true" />
		<copy todir="${dist.loc}/docs">
			<fileset dir="${doc.loc}" />
		</copy>
		<delete dir="${dist.loc}/docs/tempdita" />
		<!-- Add ASDoc xml to swc for Flex Builder Tooltips -->
		<zip destfile="${dist.loc}/bin/${project.name.versioned}.swc" update="true">
			<zipfileset dir="${doc.loc}/tempdita" prefix="docs">
				<include name="*packages.dita*" />
				<include name="*com.*" />
			</zipfileset>
		</zip>
		<!-- Copy LICENSE  -->
		<copy file="LICENSE" tofile="${dist.loc}/LICENSE" overwrite="true" />
		<!-- Zip It  -->
		<zip destfile="${dist.loc}/${project.name.versioned}.zip">
			<fileset dir="${dist.loc}" />
		</zip>
		<!-- Clean Up  -->
		<delete file="${dist.loc}/${project.name.versioned}.swc" />
		<delete file="${dist.loc}/LICENSE" />
		<delete dir="${dist.loc}/bin" />
		<delete dir="${dist.loc}/libs" />
		<delete dir="${dist.loc}/src" />
		<delete dir="${dist.loc}/src_server" />
		<delete dir="${dist.loc}/src_example" />
		<delete dir="${dist.loc}/docs" />
		<echo>[package] Release packaged successfully</echo>
	</target>
</project>
